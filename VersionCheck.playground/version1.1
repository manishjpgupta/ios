import UIKit

class CompareVersion: NSObject, Comparable {
    
    var major: String = "0"
    var minor: String = "0"
    var revision: String = "0"
    
    static func < (lhs: CompareVersion, rhs: CompareVersion) -> Bool {
        return lhs.major < rhs.major && lhs.minor < rhs.minor && lhs.revision < rhs.revision
    }
    
    static func == (lhs: CompareVersion, rhs: CompareVersion) -> Bool {
        return lhs.major == rhs.major && lhs.minor == rhs.minor && lhs.revision == rhs.revision
    }
    
    override init() {
        super.init()
    }
    
    convenience init(version: String?) {
        self.init()
    
        guard let array = version?.components(separatedBy: "."), array.count <= 3 else {
            return
        }
        
        let count = array.count
        switch count {
        case 3:
            major = array[0]
            minor = array[1]
            revision = array[2]
        case 2:
            major = array[0]
            minor = array[1]
        case 1:
            major = array[0]
        default:break
        }
    }
    
    static func isVersion(one versionOne: CompareVersion, greaterThan versionTwo: CompareVersion) -> Bool {
        if versionTwo.major < versionOne.major {
            return true
        } else if versionTwo.minor < versionOne.minor {
            return true
        } else if versionTwo.minor < versionOne.minor {
            return true
        } else {
            return false
        }
    }
}

CompareVersion.isVersion(one: CompareVersion(version: "1.7.0"), greaterThan: CompareVersion(version: "1.1.2"))


